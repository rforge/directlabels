% -*- mode: noweb; noweb-default-code-mode: R-mode; -*-
\documentclass[9pt]{beamer}
\usepackage{graphicx}

\title{Visualizing multivariate data using lattice and latticedl\\
http://directlabels.r-forge.r-project.org}
\author{Toby Dylan Hocking}
\date{15 October 2009}

\AtBeginSection[]
{
  \begin{frame}<beamer>
    \frametitle{Outline}
    \tableofcontents[currentsection]
  \end{frame}
}

\AtBeginSubsection[]
{
  \begin{frame}<beamer>
    \frametitle{Outline}
    \tableofcontents[currentsection,currentsubsection]
  \end{frame}
}

\newcommand{\framet}[2]{\frame{
\begin{itemize}
\frametitle{#1}{#2}
\end{itemize}
}}

\newcommand{\picframe}[1]{
  \frame[plain]{
    \includegraphics[width=\textwidth]{#1}
  }
}

\begin{document}
\setkeys{Gin}{width=\textwidth}
\frame{\titlepage}

\section{lattice}


\frame[containsverbatim]{\frametitle{ Load a data set}
<<>>=
data(Chem97,package="mlmRev")
head(Chem97)
@
}


\frame[containsverbatim]{\frametitle{ Simple histogram}
<<fig=T,width=10>>=
library(lattice)
plot(histogram(~gcsescore,Chem97))
@
}


\frame[containsverbatim]{\frametitle{ Histograms conditional on a categorical variable}
<<fig=T,width=10>>=
plot(histogram(~gcsescore|factor(score),Chem97))
@
}


\frame[containsverbatim]{\frametitle{ Conditioned plots of kernel density estimates}
<<fig=T,width=10>>=
plot(densityplot(~gcsescore|factor(score),Chem97))
@
}


\frame[containsverbatim]{\frametitle{ Conditioned and grouped density plots}
<<fig=T,width=10>>=
plot(densityplot(~gcsescore|factor(score),Chem97,groups=gender))
@
}


\frame[containsverbatim]{\frametitle{ Add a legend with the auto.key argument}
<<fig=T,width=10>>=
plot(densityplot(~gcsescore|factor(score),Chem97,groups=gender,auto.key=list()))
@
}


\frame[containsverbatim]{\frametitle{ Hide the actual points with the plot.points argument}
<<fig=T,width=10>>=
plot(densityplot(~gcsescore|factor(score),Chem97,groups=gender,auto.key=list(),plot.points=FALSE))
@
}


\frame[containsverbatim]{\frametitle{ Legend layout with the columns argument}
<<fig=T,width=10>>=
plot(densityplot(~gcsescore|factor(score),Chem97,groups=gender,auto.key=list(columns=2),plot.points=FALSE))
@
}


\frame[containsverbatim]{\frametitle{ Legend positioning with the space argument}
<<fig=T,width=10>>=
plot(densityplot(~gcsescore|factor(score),Chem97,groups=gender,auto.key=list(columns=2,space="bottom"),plot.points=FALSE))
@
}


\frame[containsverbatim]{\frametitle{ Show all default settings}
<<fig=T,width=10>>=
plot(show.settings())
@
}


\frame[containsverbatim]{\frametitle{ Show settings good for printout}
<<fig=T,width=10>>=
plot(show.settings(standard.theme(color=FALSE)))
@
}


\frame[containsverbatim]{\frametitle{ Change the settings}
<<fig=T,width=10>>=
br <- simpleTheme(col=c("black","red"))
plot(show.settings(rb))
@
}


\frame[containsverbatim]{\frametitle{ Change group colors with par.settings}
<<fig=T,width=10>>=
plot(densityplot(~gcsescore|factor(score),Chem97,groups=gender,auto.key=list(columns=2,space="bottom"),par.settings=br))
@
}


\frame[containsverbatim]{\frametitle{ Load a tabular data set}
<<>>=
print(VADeaths)
@
}


\frame[containsverbatim]{\frametitle{ Convert to data frame to work with lattice}
<<>>=
vad <- as.data.frame.table(VADeaths)
names(vad) <- c("age","demographic","deaths")
head(vad)
@
}


\frame[containsverbatim]{\frametitle{ Plot using bars}
<<fig=T,width=10>>=
plot(barchart(age~deaths|demographic,vad))
@
}


\frame[containsverbatim]{\frametitle{ Set the bar origin to 0 (less confusing)}
<<fig=T,width=10>>=
plot(barchart(age~deaths|demographic,vad,origin=0))
@
}


\frame[containsverbatim]{\frametitle{ Arrange the plots vertically to facilitate comparison}
<<fig=T,width=10>>=
plot(barchart(age~deaths|demographic,vad,layout=c(1,4),origin=0))
@
}


\frame[containsverbatim]{\frametitle{ Dotplots also work well for these data}
<<fig=T,width=10>>=
plot(dotplot(age~deaths|demographic,vad,layout=c(1,4)))
@
}


\frame[containsverbatim]{\frametitle{ Connect the dots with the "o" type}
<<fig=T,width=10>>=
plot(dotplot(age~deaths|demographic,vad,layout=c(1,4),type="o"))
@
}


\frame[containsverbatim]{\frametitle{ Use grouping instead of conditioning to facilitate comparison}
<<fig=T,width=10>>=
plot(dotplot(age~deaths,vad,groups=demographic))
@
}


\frame[containsverbatim]{\frametitle{ Plots can be saved as R objects}
<<fig=T,width=10>>=
dots <- dotplot(age~deaths,vad,groups=demographic)
plot(dots)
@
}


\frame[containsverbatim]{\frametitle{ Saved plots can be updated later}
<<fig=T,width=10>>=
dots2 <- update(dots,type="o")
plot(dots2)
@
}


\frame[containsverbatim]{\frametitle{ Add a confusing legend ... how to label better?}
<<fig=T,width=10>>=
plot(update(dots2,auto.key=list()))
@
}


\frame[containsverbatim]{\frametitle{ Load some earthquake measurements}
<<>>=
data(Earthquake,package="nlme")
head(Earthquake)
@
}


\frame[containsverbatim]{\frametitle{ Scatterplot with xyplot}
<<fig=T,width=10>>=
plot(xyplot(accel~distance,Earthquake))
@
}


\frame[containsverbatim]{\frametitle{ Log scales with scales argument}
<<fig=T,width=10>>=
plot(xyplot(accel~distance,Earthquake,scales=list(log=TRUE)))
@
}


\frame[containsverbatim]{\frametitle{ Type "p" is the default}
<<fig=T,width=10>>=
plot(xyplot(accel~distance,Earthquake,scales=list(log=TRUE),type=c("p")))
@
}


\frame[containsverbatim]{\frametitle{ Type "g" adds a grid}
<<fig=T,width=10>>=
plot(xyplot(accel~distance,Earthquake,scales=list(log=TRUE),type=c("p","g")))
@
}


\frame[containsverbatim]{\frametitle{ Type "smooth" adds a smooth line}
<<fig=T,width=10>>=
plot(xyplot(accel~distance,Earthquake,scales=list(log=TRUE),type=c("p","g","smooth")))
@
}


\frame[containsverbatim]{\frametitle{ Add some labels}
<<fig=T,width=10>>=
plot(xyplot(accel~distance,Earthquake,scales=list(log=TRUE),type=c("p","g","smooth"),xlab="Distance from epicenter (km)",ylab="Maximum horizontal acceleration (g)",main="Larger quakes are felt closer to the epicenter",sub="Data on log scale"))
@
}


\frame[containsverbatim]{\frametitle{ Make some 3d data}
<<>>=
x <- seq(pi/4, 5 * pi, length.out = 100)
y <- seq(pi/4, 5 * pi, length.out = 100)
r <- as.vector(sqrt(outer(x^2, y^2, "+")))
grid <- expand.grid(x=x, y=y)
grid$z <- cos(r^2) * exp(-r/(pi^3))
head(grid)
@
}


\frame[containsverbatim]{\frametitle{ Plot 3 categorical variables using color}
<<fig=T,width=10>>=
plot(levelplot(z~x*y,grid))
@
}


\frame[containsverbatim]{\frametitle{ Add more levels to the color scale}
<<fig=T,width=10>>=
plot(levelplot(z~x*y,grid,cuts=50))
@
}


\frame[containsverbatim]{\frametitle{ Use a different color scale}
<<fig=T,width=10>>=
my.colors <- sapply(0:100,function(l)hcl(l=l))
plot(levelplot(z~x*y,grid,cuts=50,col.regions=my.colors))
@
}


\frame[containsverbatim]{\frametitle{ Data in matrix form of volcano heights}
<<fig=T,width=10>>=
dim(volcano)
plot(volcano[1:5,1:5])
@
}


\frame[containsverbatim]{\frametitle{ Plot volcano elevations in a matrix using color}
<<fig=T,width=10>>=
plot(levelplot(volcano,col.regions=my.colors))
@
}


\frame[containsverbatim]{\frametitle{ Use 3d wireframe plots}
<<fig=T,width=10>>=
plot(wireframe(volcano,drape=TRUE,col.regions=my.colors))
@
}


\frame[containsverbatim]{\frametitle{ Combine plots using latticeExtra}
<<fig=T,width=10>>=
library(latticeExtra)
trellis.par.set(regions=list(col=my.colors))
plot(c(wireframe(volcano,drape=TRUE),levelplot(volcano)))
@
}


\frame[containsverbatim]{\frametitle{ Box and whisker plots}
<<fig=T,width=10>>=
plot(bwplot(gcsescore~gender|factor(score),Chem97,layout=c(6,1)))
@
}


\frame[containsverbatim]{\frametitle{ Compare the distribution (sample quantiles) of 2 variables}
<<fig=T,width=10>>=
plot(qq(gender~gcsescore|factor(score),Chem97))
@
}


\frame[containsverbatim]{\frametitle{ Force aspect ratio to be equal}
<<fig=T,width=10>>=
plot(qq(gender~gcsescore|factor(score),Chem97,aspect=1))
@
}


\frame[containsverbatim]{\frametitle{ Determine the normality of a variable}
<<fig=T,width=10>>=
plot(qqmath(~gcsescore,Chem97,groups=gender,auto.key=list(space="right")))
@
}


\frame[containsverbatim]{\frametitle{ Only plot 100 probability points (faster)}
<<fig=T,width=10>>=
plot(qqmath(~gcsescore,Chem97,groups=gender,auto.key=list(space="right"),f.value=ppoints(100)))
@
}


\frame[containsverbatim]{\frametitle{ Use lines instead of points ... legend?}
<<fig=T,width=10>>=
plot(qqmath(~gcsescore,Chem97,groups=gender,auto.key=list(space="right"),f.value=ppoints(100),type="l"))
@
}


\frame[containsverbatim]{\frametitle{ Change legend appearance}
<<fig=T,width=10>>=
plot(qqmath(~gcsescore,Chem97,groups=gender,auto.key=list(lines=TRUE,points=FALSE,space="right"),f.value=ppoints(100),type="l"))
@
}


\frame[containsverbatim]{\frametitle{ Longitudinal data}
<<>>=
data(BodyWeight,package="nlme")
head(BodyWeight)
@
}


\frame[containsverbatim]{\frametitle{ Even more confusing legend}
<<fig=T,width=10>>=
plot(xyplot(weight~Time|Diet,BodyWeight,groups=Rat,type='l',layout=c(3,1),auto.key=list(space="right")))
@
}


\section{latticedl}

\framet{Direct labels are almost always better than legends}{
\item Edward Tufte, professor emeritus of Statistics at Yale
\item 1983, The Visual Display of Quantitative Information
\includegraphics{TUFTE.jpg}}


\frame[containsverbatim]{\frametitle{ Easy fix for confusing legend: direct labels}
<<fig=T,width=10>>=
library(latticedl)
qqm <- qqmath(~gcsescore,Chem97,groups=gender,f.value=ppoints(100),type="l")
plot(direct.label(qqm))
@
}


\frame[containsverbatim]{\frametitle{ For longitudinal data we also label the first or last points}
<<fig=T,width=10>>=
long <- xyplot(weight~Time|Diet,BodyWeight,groups=Rat,type='l',layout=c(3,1))
plot(direct.label(long))
@
}


\frame[containsverbatim]{\frametitle{ Change label positions with the method argument}
<<fig=T,width=10>>=
plot(direct.label(long,method=last.points))
@
}


\frame[containsverbatim]{\frametitle{ Labelling method can also be specified as a list}
<<fig=T,width=10>>=
plot(direct.label(dots2,method=list("last.points",rot=45)))
@
}


\frame[containsverbatim]{\frametitle{ Or as a fixed data frame for a specific plot}
<<fig=T,width=10>>=
plot(direct.label(qqm,method=data.frame(x=c(-2,0),y=c(6,4),groups=c("F","M"))))
@
}


\frame[containsverbatim]{\frametitle{ Works for lots of colors}
<<fig=T,width=10>>=
plot(direct.label(qqmath(~gcsescore|gender,Chem97,groups=factor(score),type=c('l','g'),f.value=ppoints(100))))
@
}


\frame[containsverbatim]{\frametitle{ And even in black and white}
<<fig=T,width=10>>=
plot(direct.label(qqmath(~gcsescore|gender,Chem97,groups=factor(score),type=c('l','g'),f.value=ppoints(100),par.settings=standard.theme(color=FALSE))))
@
}


\frame[containsverbatim]{\frametitle{ Load some data on car fuel efficiency}
<<>>=
data(mpg,package="ggplot2")
head(mpg)
@
}


\frame[containsverbatim]{\frametitle{ Plot city versus highway fuel efficiency}
<<fig=T,width=10>>=
plot(xyplot(cty~hwy,mpg,aspect=1))
@
}


\frame[containsverbatim]{\frametitle{ Jitter the data to see all the points}
<<fig=T,width=10>>=
plot(xyplot(jitter(cty)~jitter(hwy),mpg,aspect=1))
@
}


\frame[containsverbatim]{\frametitle{ Group data by number of cylinders in the engine}
<<fig=T,width=10>>=
plot(direct.label(xyplot(jitter(cty)~jitter(hwy),mpg,aspect=1,groups=factor(cyl))))
@
}


\frame[containsverbatim]{\frametitle{ Group data by car class}
<<fig=T,width=10>>=
plot(direct.label(xyplot(jitter(cty)~jitter(hwy),mpg,aspect=1,groups=class)))
@
}


\end{document}


